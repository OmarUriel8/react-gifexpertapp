{"version":3,"sources":["reportWebVitals.js","components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/Loader.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","cat","alert","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","Loader","GifGrid","loading","state","setState","useEffect","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qBCyBCQ,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACtB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACC,sBAAMC,SAXc,SAACC,GACrBA,EAAEC,iBACEJ,EAAWK,OAAS,GACvBP,GAAc,SAACQ,GAAD,OAAUN,GAAV,mBAAyBM,OACvCL,EAAc,KAEdM,MAAM,mCAKP,SACC,uBACCC,KAAK,OACLC,YAAY,yBACZC,MAAOV,EACPW,SAlBuB,SAACR,GAAD,OAAOF,EAAcE,EAAES,OAAOF,a,+BCN5CG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,0FACyEC,UAC9FH,GAFqB,sBAIHI,MAAMF,GAJH,cAIhBG,EAJgB,gBAKCA,EAAKC,OALN,uBAKdC,EALc,EAKdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXd,kBAcfM,GAde,4CAAH,sDCWLO,EATK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACC,sBAAKc,UAAU,yCAAf,UACC,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCMQO,G,MAVA,WACd,OACC,qBAAKH,UAAU,YAAf,SACC,qBAAKA,UAAU,aAAf,SACC,8BCqBWI,EAtBC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAElB,ECJ2B,SAACA,GAC5B,MAA0Bf,mBAAS,CAClCsB,KAAM,GACNc,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OARAC,qBAAU,WACTzB,EAAQC,GAAUvB,MAAK,SAACgD,GAEvBF,EAAS,CAAEhB,KAAMkB,EAAMJ,SAAS,SAG/B,CAACrB,IAEGsB,EDT2BI,CAAa1B,GAAjCa,EAAd,EAAQN,KAAcc,EAAtB,EAAsBA,QAEtB,OACC,qCACC,oBAAIL,UAAU,qCAAd,SAAoDhB,IACnDqB,GACA,cAAC,EAAD,IAKD,qBAAKL,UAAU,YAAf,SACEH,EAAOJ,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aECZgB,EAjBM,WACpB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACE4C,EAAWnB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCRvC6B,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAGzB3D,M","file":"static/js/main.ac54ad7f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = (e) => setInputValue(e.target.value);\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (inputValue.length > 2) {\r\n\t\t\tsetCategories((cat) => [inputValue, ...cat]);\r\n\t\t\tsetInputValue('');\r\n\t\t} else {\r\n\t\t\talert('Es necesario colocar una serie');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Ingresa una palabra...\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?api_key=IfCdoOIpGVssSB4LJuUm1zJgls2Yis3s&q=${encodeURI(\r\n\t\tcategory\r\n\t)}&limit=10`;\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\r\n\tconst gifs = data.map((img) => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t};\r\n\t});\r\n\treturn gifs;\r\n};\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport './Loader.css';\r\nconst Loader = () => {\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"lds-circle\">\r\n\t\t\t\t<div></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\nimport Loader from './Loader';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\t// const [images, setImages] = useState([]);\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2 className=\"animate__animated animate__flipInX\">{category}</h2>\r\n\t\t\t{loading && (\r\n\t\t\t\t<Loader />\r\n\t\t\t\t// <p className=\" animate__animated animate__flash animate__slow animate__infinite\">\r\n\t\t\t\t// \tLoading\r\n\t\t\t\t// </p>\r\n\t\t\t)}\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{images.map((img) => (\r\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((imgs) => {\r\n\t\t\t// setTimeout(() => {\r\n\t\t\tsetState({ data: imgs, loading: false });\r\n\t\t\t// }, 5000);\r\n\t\t});\r\n\t}, [category]);\r\n\r\n\treturn state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState(['One Punch']);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<hr />\r\n\t\t\t<ol>\r\n\t\t\t\t{categories.map((category) => (\r\n\t\t\t\t\t<GifGrid category={category} key={category} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<GifExpertApp />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}